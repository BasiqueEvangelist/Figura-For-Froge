package org.moon.figura;

import com.mojang.blaze3d.vertex.PoseStack;
import net.minecraft.client.Camera;
import net.minecraft.client.Minecraft;
import net.minecraft.client.renderer.MultiBufferSource;
import net.minecraft.network.chat.Component;
import net.minecraft.world.entity.Entity;
import net.minecraftforge.client.ConfigGuiHandler;
import net.minecraftforge.client.gui.OverlayRegistry;
import net.minecraftforge.common.MinecraftForge;
import net.minecraftforge.event.TickEvent;
import net.minecraftforge.eventbus.api.SubscribeEvent;
import net.minecraftforge.fml.IExtensionPoint;
import net.minecraftforge.fml.ModList;
import net.minecraftforge.fml.ModLoadingContext;
import net.minecraftforge.fml.common.Mod;
import net.minecraftforge.fml.loading.FMLPaths;
import org.moon.figura.avatars.Avatar;
import org.moon.figura.avatars.AvatarManager;
import org.moon.figura.avatars.providers.LocalAvatarLoader;
import org.moon.figura.backend.NetworkManager;
import org.moon.figura.commands.FiguraCommands;
import org.moon.figura.config.ConfigManager;
import org.moon.figura.gui.PaperDoll;
import org.moon.figura.gui.screens.ConfigScreen;
import org.moon.figura.lua.FiguraLuaPrinter;
import org.moon.figura.lua.docs.FiguraDocsManager;
import org.moon.figura.trust.TrustManager;
import org.moon.figura.utils.LuaUtils;
import org.moon.figura.utils.TextUtils;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

import java.nio.file.Files;
import java.nio.file.Path;
import java.time.LocalDate;
import java.util.UUID;

@Mod.EventBusSubscriber(modid = FiguraMod.MOD_ID)
public class FiguraMod {

    public static final String MOD_ID = "figura";
    public static final String VERSION = ModList.get().getModContainerById(MOD_ID).orElseThrow().getModInfo().getVersion().toString();
    public static final boolean DEBUG_MODE = Math.random() + 1 < 0;
    public static final boolean CHEESE_DAY = LocalDate.now().getDayOfMonth() == 1 && LocalDate.now().getMonthValue() == 4;
    public static final Path GAME_DIR = FMLPaths.GAMEDIR.get().normalize();
    public static final Logger LOGGER = LoggerFactory.getLogger(MOD_ID.substring(0, 1).toUpperCase() + MOD_ID.substring(1));

    public static boolean DO_OUR_NATIVES_WORK = false;

    public static int ticks = 0;

    public static void onInitializeClient() {
        //init managers
        ConfigManager.init();
        TrustManager.init();
        FiguraDocsManager.init();
        MinecraftForge.EVENT_BUS.register(FiguraCommands.class);
        MinecraftForge.EVENT_BUS.register(AvatarManager.class);
        LuaUtils.setupNativesForLua();

        OverlayRegistry.registerOverlayTop("Paper doll", PaperDoll::render);

        ModLoadingContext.get().registerExtensionPoint(IExtensionPoint.DisplayTest.class, () -> new IExtensionPoint.DisplayTest(() -> "something", (remoteVersionString,networkBool) -> networkBool));
        ModLoadingContext.get().registerExtensionPoint(ConfigGuiHandler.ConfigGuiFactory.class, () -> new ConfigGuiHandler.ConfigGuiFactory((minecraft, parent) -> new ConfigScreen(parent, false)));
    }

    @SubscribeEvent
    public static void tick(TickEvent.ClientTickEvent event) {
        if (event.phase != TickEvent.Phase.START) return;

        NetworkManager.tick();
        LocalAvatarLoader.tickWatchedKey();
        AvatarManager.tickLoadedAvatars();
        FiguraLuaPrinter.printChatFromQueue();
        ticks++;
    }

    public static void renderFirstPersonWorldParts(Camera camera, PoseStack stack, float tickDelta, MultiBufferSource.BufferSource bufferSource) {
        if (!camera.isDetached()) {
            Entity watcher = camera.getEntity();
            Avatar avatar = AvatarManager.getAvatar(watcher);
            if (avatar != null) {
                avatar.onFirstPersonWorldRender(watcher, bufferSource, stack, camera, tickDelta);
            }
        }
    }

    // -- Helper Functions -- //

    //mod root directory
    public static Path getFiguraDirectory() {
        Path p = GAME_DIR.resolve(MOD_ID);
        try {
            Files.createDirectories(p);
        } catch (Exception e) {
            LOGGER.error("Failed to create the main Figura directory", e);
        }

        return p;
    }

    //get local player uuid
    public static UUID getLocalPlayerUUID() {
        return Minecraft.getInstance().getUser().getGameProfile().getId();
    }

    /**
     * Sends a chat message right away. Use when you know your message is safe.
     * If your message is unsafe, (generated by a user), use luaSendChatMessage instead.
     * @param message - text to send
     */
    public static void sendChatMessage(Component message) {
        if (Minecraft.getInstance().gui != null)
            Minecraft.getInstance().gui.getChat().addMessage(TextUtils.replaceTabs(message));
        else
            LOGGER.info(message.getString());
    }
}
