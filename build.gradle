plugins {
	id 'dev.architectury.loom' version '0.11.0-SNAPSHOT'
	id "com.github.johnrengelman.shadow" version "7.1.2"
	id 'io.github.juuxel.loom-quiltflower' version '1.7.1'
	id 'maven-publish'
}

sourceCompatibility = JavaVersion.VERSION_17
targetCompatibility = JavaVersion.VERSION_17

archivesBaseName = project.archives_base_name
version = project.mod_version + "+" + project.minecraft_version
group = project.maven_group

repositories {
	maven { url 'https://jitpack.io' }
	maven { url 'https://maven.terraformersmc.com/releases/' }
}

configurations {
	common
	shade // Don't use shadow from the shadow plugin because we don't want IDEA to index this.
	compileClasspath.extendsFrom common
	runtimeClasspath.extendsFrom common
}

dependencies {
	// Fabric
	minecraft "com.mojang:minecraft:$minecraft_version"
	mappings loom.officialMojangMappings()

	// Froge <3
	forge "net.minecraftforge:forge:$minecraft_version-${project.forge_version}"

	// Libraries
	shade(forgeRuntimeLibrary(implementation("com.github.Moonlight-MC:JNLua:$jnlua")))
	shade(forgeRuntimeLibrary(implementation("org.java-websocket:Java-WebSocket:$websocket")))
}

processResources {
	inputs.property "version", version
	inputs.property "minecraft_version", minecraft_version

	filesMatching("META-INF/mods.toml") {
		expand "version": version,
		       "minecraft_version": minecraft_version
	}
}

shadowJar {
	configurations = [project.configurations.shade]
	classifier "dev-shadow"
}

remapJar {
	input.set shadowJar.archiveFile
	dependsOn shadowJar
	classifier null
}

tasks.withType(JavaCompile).configureEach {
	it.options.release = Integer.parseInt(sourceCompatibility.toString())
}

java {
	withSourcesJar()
}

jar {
	from("LICENSE") {
		rename { "${it}_$archivesBaseName"}
	}
}

publishing {
	publications {
		mavenJava(MavenPublication) {
			from components.java
		}
	}
}
